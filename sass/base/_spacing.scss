$smallSpacing: $s16px;
$mediumSpacing: $s24px;
$largeSpacing: $s32px;
$extraLargeSpacing: $s40px;
$spacing: (
  'right': $mediumSpacing,
  'left': $mediumSpacing,
  'top': $mediumSpacing,
  'bottom': $mediumSpacing,
  'x': $mediumSpacing,
  'y': $mediumSpacing,

  'right--small': $smallSpacing,
  'left--small': $smallSpacing,
  'top--small': $smallSpacing,
  'bottom--small': $smallSpacing,
  'x--small': $smallSpacing,
  'y--small': $smallSpacing,

  'right--large': $largeSpacing,
  'left--large': $largeSpacing,
  'top--large': $largeSpacing,
  'bottom--large': $largeSpacing,
  'x--large': $largeSpacing,
  'y--large': $largeSpacing,

  'right--extra-large': $extraLargeSpacing,
  'left--extra-large': $extraLargeSpacing,
  'top--extra-large': $extraLargeSpacing,
  'bottom--extra-large': $extraLargeSpacing,
  'x--extra-large': $extraLargeSpacing,
  'y--extra-large': $extraLargeSpacing,

  'right--none': 0,
  'left--none': 0,
  'top--none': 0,
  'bottom--none': 0,
  'x--none': 0,
  'y--none': 0,

  '-large': $largeSpacing,
  '-small': $smallSpacing,
  '-none': 0,
);

// For each of the spacings create a margin and padding class
@each $spacing, $value in $spacing {
  .m-#{$spacing} {
    // if the spacing contains the word 'right'
    @if str-index($spacing, 'right') {
      margin-right: $value !important;
    } @else if str-index($spacing, 'left') {
      margin-left: $value !important;
    } @else if str-index($spacing, 'top') {
      margin-top: $value !important;
    } @else if str-index($spacing, 'bottom') {
      margin-bottom: $value !important;
    } @else if str-index($spacing, 'x') {
      margin-left: $value !important;
      margin-right: $value !important;
    } @else if str-index($spacing, 'y') {
      margin-top: $value !important;
      margin-bottom: $value !important;
    } @else {
      margin: $value !important;
    }
  }
  .p-#{$spacing} {
    // if the spacing contains the word 'right'
    @if str-index($spacing, 'right') {
      padding-right: $value !important;
    } @else if str-index($spacing, 'left') {
      padding-left: $value !important;
    } @else if str-index($spacing, 'top') {
      padding-top: $value !important;
    } @else if str-index($spacing, 'bottom') {
      padding-bottom: $value !important;
    } @else if str-index($spacing, 'x') {
      padding-left: $value !important;
      padding-right: $value !important;
    } @else if str-index($spacing, 'y') {
      padding-top: $value !important;
      padding-bottom: $value !important;
    } @else {
      padding: $value !important;
    }
  }
}

.m {
  margin: $mediumSpacing !important;
}
.p {
  padding: $mediumSpacing !important;
}

// .mb {
//   @include mb;
// }

// .mt {
//   @include mt;
// }

// .ml {
//   @include ml;
// }

// .mr {
//   @include mr;
// }

// .mt-lg {
//   @include mt-lg;
// }

// .mb-lg {
//   @include mb-lg;
// }

// .ml-lg {
//   @include ml-lg;
// }

// .mr-lg {
//   @include mr-lg;
// }

// .pd-t {
//   @include pd-t;
// }

// .pd-b {
//   @include pd-b;
// }

// .pd-l {
//   @include pd-l;
// }

// .pd-r {
//   @include pd-r;
// }

// .pd-b-lg {
//   @include pd-b-lg;
// }

// .pd-t-lg {
//   @include pd-t-lg;
// }

// .pd-l-lg {
//   @include pd-l-lg;
// }

// .pd-r-lg {
//   @include pd-r-lg;
// }
